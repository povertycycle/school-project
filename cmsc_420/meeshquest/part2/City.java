package cmsc420.meeshquest.part2;

import java.awt.geom.Point2D;

public class City extends Point2D.Float implements Comparable<City> {
	/* ============================================================================================================= */
	/* Fields of City class which has name, color, radius, and if the city is isolated.
	/* ============================================================================================================= */	
	private String name, color;
	private String radius;
	private boolean isIsolated;
	/* ============================================================================================================= */
	/* Constructor.
	/* ============================================================================================================= */	
	public City(String cityName, float x, float y, String r, String colour, boolean isIsolated) {
		super(x, y);
		this.isIsolated = isIsolated;
		this.name = cityName;
		this.radius = r;
		this.color = colour;
	}
	/* ============================================================================================================= */
	/* Returns the name of the city.
	/* ============================================================================================================= */	
	public String getName() { return this.name; }
	/* ============================================================================================================= */
	/* Returns the color of the city.
	/* ============================================================================================================= */	
	public String getColor() { return this.color; }
	/* ============================================================================================================= */
	/* Returns the radius of the city.
	/* ============================================================================================================= */	
	public String getRadius() {	return radius;	}
	/* ============================================================================================================= */
	/* Returns the coordinates of the city in Point2D.Float.
	/* ============================================================================================================= */	
	public Point2D.Float getCoordinates() {
		Point2D.Float coordinates = new Point2D.Float(this.x, this.y);
		return coordinates;
	}
	/* ============================================================================================================= */
	/* Returns the x value of the coordinate as an int.
	/* ============================================================================================================= */	
	public int getIntX() { return (int) x; }
	/* ============================================================================================================= */
	/* Returns the y value of the coordinate as an int.
	/* ============================================================================================================= */	
	public int getIntY() { return (int) y; }
	/* ============================================================================================================= */
	/* Setter for the city to be isolated when it is mapped through mapCity.
	/* ============================================================================================================= */	
	public void setToIsolated() { this.isIsolated = true; }
	/* ============================================================================================================= */
	/* Setter for the city to not be isolated.
	/* ============================================================================================================= */	
	public void setToNotIsolated() { this.isIsolated = false; }
	/* ============================================================================================================= */
	/* Returns if the city is isolated or not.
	/* ============================================================================================================= */	
	public boolean getIsolatedOrNot() {	return this.isIsolated;	}
	/* ============================================================================================================= */
	/* Comparator for the city.
	/* ============================================================================================================= */	
	public int compareTo(City o) {
		if (o == null) throw new NullPointerException();
		return Comparators.sortNames.compare(this.name, o.name);
	}
		
}